using Brierley.FrameWork.Data.ModelAttributes;
using System;

namespace Brierley.FrameWork.Data.DomainModel
{
    /// <summary>
    /// POCO for Validator. This class is autogenerated
    /// </summary>
    [Serializable]
    [PetaPoco.ExplicitColumns]
    [PetaPoco.PrimaryKey("ValidatorCode", sequenceName = "hibernate_sequence")]
    [PetaPoco.TableName("LW_Validator")]
    public class Validator : LWCoreObjectBase
    {
        /// <summary>
        /// Gets or sets the ID for the current Validator
        /// </summary>
        [PetaPoco.Column("ValidatorCode", IsNullable = false)]
        public long ID { get; set; }

        /// <summary>
        /// Gets or sets the Name for the current Validator
        /// </summary>
        [PetaPoco.Column(Length = 50, IsNullable = false)]
        [UniqueIndex(RequiresLowerFunction = false)]
        public string Name { get; set; }

		/// <summary>
		/// Gets or sets the RegularExpression for the current Validator
		/// </summary>
        [PetaPoco.Column(Length = 2000, IsNullable = false)]
		public string RegularExpression { get; set; }



		/// <summary>
		/// Initializes a new instance of the Validator class
		/// </summary>
		public Validator()
		{
		}

		/// <summary>
		/// Initializes a new instance of the Validator class
		/// </summary>
		/// <param name="name">Initial <see cref="Validator.Name" /> value</param>
		/// <param name="regularExpression">Initial <see cref="Validator.RegularExpression" /> value</param>
		/// <param name="updateDate">Initial <see cref="Validator.UpdateDate" /> value</param>
		public Validator(string name, string regularExpression, DateTime updateDate)
		{
			Name = name;
			RegularExpression = regularExpression;
			UpdateDate = updateDate;
		}

        public Validator Clone()
        {
            return Clone(new Validator());            
        }

        public Validator Clone(Validator dest)
        {
            dest.Name = Name;
            dest.RegularExpression = RegularExpression;
            return (Validator)base.Clone(dest);            
        }
	}
}