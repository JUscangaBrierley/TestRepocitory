using System;

using Brierley.FrameWork.Common;
using Brierley.FrameWork.Data.ModelAttributes;

namespace Brierley.FrameWork.Data.DomainModel
{
	/// <summary>
	/// POCO for PointTransaction. This class is autogenerated
	/// </summary>
	[Serializable]
	[PetaPoco.ExplicitColumns]
	[PetaPoco.PrimaryKey("PointTransactionId", sequenceName = "SEQ_POINTTRANSACTIONID")]
	[PetaPoco.TableName("LW_PointTransaction")]
    [ColumnIndex(ColumnName = "VcKey,TransactionType")]
    public class PointTransaction : LWCoreObjectBase
	{
		/// <summary>
		/// Gets or sets the Id for the current PointTransaction
		/// </summary>
		[PetaPoco.Column("PointTransactionId", IsNullable = false)]
		public long Id { get; set; }

		/// <summary>
		/// Gets or sets the VcKey for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(IsNullable = false)]
        [ForeignKey(typeof(VirtualCard), "VcKey")]
		public long VcKey { get; set; }

		/// <summary>
		/// Gets or sets the PointTypeId for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(IsNullable = false)]
        [ForeignKey(typeof(PointType), "ID")]
		public long PointTypeId { get; set; }

		/// <summary>
		/// Gets or sets the PointEventId for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(IsNullable = false)]
        [ForeignKey(typeof(PointEvent), "ID")]
		public long PointEventId { get; set; }

		/// <summary>
		/// Gets or sets the TransactionType for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(IsNullable = false)]
        public PointBankTransactionType TransactionType { get; set; }

		/// <summary>
		/// Gets or sets the TransactionDate for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(IsNullable = false)]
		public DateTime TransactionDate { get; set; }

		/// <summary>
		/// Gets or sets the PointAwardDate for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(IsNullable = false)]
		public DateTime PointAwardDate { get; set; }

		/// <summary>
		/// Gets or sets the Points for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(IsNullable = false)]
		public decimal Points { get; set; }

		/// <summary>
		/// Gets or sets the ExpirationReason for the current PointTransaction
		/// </summary>
        [PetaPoco.Column]
		public PointExpirationReason? ExpirationReason { get; set; }

		/// <summary>
		/// Gets or sets the ExpirationDate for the current PointTransaction
		/// </summary>
        [PetaPoco.Column]
		public DateTime? ExpirationDate { get; set; }

		/// <summary>
		/// Gets or sets the Notes for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(Length = 500)]
		public string Notes { get; set; }

		/// <summary>
		/// Gets or sets the PromoCode for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(Length = 150)]
		public string PromoCode { get; set; }

		/// <summary>
		/// Gets or sets the OwnerType for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(IsNullable = false)]
		public PointTransactionOwnerType OwnerType { get; set; }

		/// <summary>
		/// Gets or sets the OwnerId for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(IsNullable = false)]
        public long OwnerId { get; set; }

		/// <summary>
		/// Gets or sets the RowKey for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(IsNullable = false)]
        public long RowKey { get; set; }

		/// <summary>
		/// Gets or sets the ParentTransactionId for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(IsNullable = false)]
        public long ParentTransactionId { get; set; }

		/// <summary>
		/// Gets or sets the PointsConsumed for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(IsNullable = false)]
        public decimal PointsConsumed { get; set; }

		/// <summary>
		/// Gets or sets the PointsOnHold for the current PointTransaction
		/// </summary>
        [PetaPoco.Column(IsNullable = false)]
        public decimal PointsOnHold { get; set; }

		[PetaPoco.Column("PTLocationId", Length = 50)]
		public string LocationId { get; set; }

		[PetaPoco.Column("PTChangedBy", Length = 50)]
		public string ChangedBy { get; set; }


		/// <summary>
		/// Initializes a new instance of the PointTransaction class
		/// </summary>
		public PointTransaction()
		{
			Id = -1;
			VcKey = -1;
			PromoCode = string.Empty;
			OwnerType = PointTransactionOwnerType.Unknown;
			ParentTransactionId = -1;
		}

		public PointTransaction Clone()
		{
			return new PointTransaction()
			{
				Id = this.Id,
				VcKey = this.VcKey,
				PointTypeId = this.PointTypeId,
				PointEventId = this.PointEventId,
				TransactionType = this.TransactionType,
				TransactionDate = this.TransactionDate,
				PointAwardDate = this.PointAwardDate,
				Points = this.Points,
				ExpirationReason = this.ExpirationReason,
				ExpirationDate = this.ExpirationDate,
				Notes = this.Notes,
				OwnerType = this.OwnerType,
				OwnerId = this.OwnerId,
				RowKey = this.RowKey,
				ParentTransactionId = this.ParentTransactionId,
				PointsConsumed = this.PointsConsumed,
				PointsOnHold = this.PointsOnHold,
				LocationId = this.LocationId,
				ChangedBy = this.ChangedBy,
			};
		}
	}
}