//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by _________?
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;

using Brierley.FrameWork.Data;
using Brierley.FrameWork.Data.DomainModel;

namespace $clazz.Namespace
{
	/// <summary>
	/// POCO for $clazz.Name. This class is autogenerated
	/// </summary>
	[PetaPoco.ExplicitColumns]
	[PetaPoco.PrimaryKey("A_ROWKEY", sequenceName = "SEQ_ROWKEY")]
	[PetaPoco.TableName("ATS_$clazz.Name")]
	public class $clazz.Name : ClientDataObject
	{
#if($clazz.IsMemberDetails())
		private bool _isOptingIn = false;
		private bool _isOptingOut = false;
#end

				
#if($clazz.LWIdentifierRequired)
		private long _lwIdentifier;	
#end
#foreach($attribute in $clazz.Attributes)				
		private $clazz.GetAttributeReturnType($attribute) _$clazz.GetAttributeFieldName($attribute);	
#end
		
		public $clazz.Name()() {}
		
		[PetaPoco.Column("A_$clazz.GetLinkProperty()")]
	    public virtual long $clazz.GetLinkProperty() { get; set; }
	    
#if($clazz.LWIdentifierRequired)
		/// <summary>
        /// Gets or sets the LWIdentifier for the current RefCardLabel
        /// <summary>
        [Browsable(true)]
		[PetaPoco.Column]
        public virtual long LWIdentifier
        {
            get { return this._lwIdentifier; }
            set { this._lwIdentifier = value; IsDirty = true; }
        }	
#end

#if($clazz.IsMemberDetails())

		public override bool IsDirty
		{
			get
			{
				return base.IsDirty;
			}
			set
			{
				base.IsDirty = value;
				if(!value)
				{
					_isOptingIn = _isOptingOut = false;
				}
			}
		}

		public bool IsOptingIn 
		{
			get 
			{
				return _isOptingIn;
			}
		}
		
		public bool IsOptingOut
		{
			get
			{
				return _isOptingOut;
			}
		}

		public bool IsCompletingDoubleOptIn { get; set; }
#end

#foreach($attribute in $clazz.Attributes)
		/// <summary>
		/// Gets or sets the $attribute.Name for the current $clazz.Name
		/// <summary>
		[Browsable(true)]
		[PetaPoco.Column("A_$attribute.Name")]
		public virtual $clazz.GetAttributeReturnType($attribute) $attribute.Name
		{
			get 
			{
				return this._$clazz.GetAttributeFieldName($attribute);
			}
			set 
			{
				#if($clazz.IsMemberDetails() && $clazz.IsSmsOptIn($attribute))
				bool wasOptingIn = _isOptingIn;
				bool wasOptingOut = _isOptingOut;
				_isOptingIn = _$clazz.GetAttributeFieldName($attribute) != value && value == true && wasOptingOut == false;
				_isOptingOut = _${clazz.GetAttributeFieldName($attribute)}.GetValueOrDefault() != value.GetValueOrDefault() && value == false && wasOptingIn == false;
				#end
				this._$clazz.GetAttributeFieldName($attribute) = value;
				IsDirty = true;
			}
		}
#end
		
        public override string GetAttributeSetName()
        {
			return "$clazz.Name";
        }
		
		public override IAttributeSetContainer Clone()
		{
			return Clone(new ${clazz.Name()}());
		}

		public override IAttributeSetContainer Clone(IAttributeSetContainer d)
        {
			$clazz.Name dest = d as $clazz.Name;
            dest.$clazz.GetLinkProperty() = $clazz.GetLinkProperty();
#if($clazz.LWIdentifierRequired)
			dest.LWIdentifier = LWIdentifier;	
#end
#foreach($attribute in $clazz.Attributes)
		    dest.$attribute.Name = $attribute.Name;				
#end
            return ($clazz.Name)base.Clone(dest);            
        }

        public override LWObjectAuditLogBase GetArchiveObject()
        {
            $clazz.ALName ar = new $clazz.ALName()
            {
                ObjectId = this.RowKey,
#if($clazz.LWIdentifierRequired)
				LWIdentifier = this.LWIdentifier,
#end
                $clazz.GetLinkProperty() = this.$clazz.GetLinkProperty(),
                ParentRowKey = this.ParentRowKey,
#foreach($attribute in $clazz.Attributes)				
				$attribute.Name = this.$attribute.Name,
#end                
                StatusCode = this.StatusCode,                
                CreateDate = this.CreateDate,
                UpdateDate = this.UpdateDate
            };
            return ar;
        }
	}
}
