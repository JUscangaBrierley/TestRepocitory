using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Brierley.FrameWork.Common;
using Brierley.FrameWork.Common.Exceptions;

namespace Brierley.FrameWork.Data.DomainModel
{
    /// <summary>
    /// POCO for PushSession. This class is autogenerated
    /// </summary>
    [Serializable]
    [PetaPoco.ExplicitColumns]
    [PetaPoco.PrimaryKey("Id", sequenceName = "hibernate_sequence")]
    [PetaPoco.TableName("LW_PushSession")]
	public class PushSession : LWCoreObjectBase
	{
        /// <summary>
        /// Gets or sets the id for the current Push Session
        /// </summary>
        [PetaPoco.Column(IsNullable = false)]
        public Int64 Id { get; set; }
        /// <summary>
        /// Gets or sets the device id for the current Push Session
        /// </summary>
        [PetaPoco.Column(IsNullable = false)]
		public long DeviceId { get; set; }

        /// <summary>
        /// Gets or sets the device id for the current Push Session
        /// </summary>
        [PetaPoco.Column(IsNullable = false)]
        public DateTime StartDate { get; set; }

        /// <summary>
        /// Gets or sets the device id for the current Push Session
        /// </summary>
        [PetaPoco.Column(IsNullable = false)]
        public DateTime EndDate { get; set; }

        public bool IsActive
        {
            get
            {
                return (StartDate < DateTime.Now && EndDate > DateTime.Now);
            }
        }

        /// <summary>
        /// Initializes a new instance of the PushSession class
        /// </summary>
        public PushSession()
		{
			Id = -1;
		}

        public PushSession(PushSession other)
		{
			Id = -1;
            DeviceId = other.DeviceId;
            StartDate = other.StartDate;
            EndDate = other.EndDate;
            CreateDate = other.CreateDate;
		}
	}
}
