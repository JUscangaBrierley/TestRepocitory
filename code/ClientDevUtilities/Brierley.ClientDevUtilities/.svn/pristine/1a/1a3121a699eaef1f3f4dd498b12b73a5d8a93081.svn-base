//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by NHibernate.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;

using Brierley.FrameWork.Common;
//using Brierley.DNNModules.Auction.Components;

namespace Brierley.FrameWork.Data.DomainModel
{
	/// <summary>
	/// POJO for AuctionListing. This class is autogenerated.  
    /// A listing has a status that indicates how it ended and a set of dates that determine whether 
    /// the list is still active. When an item is listed, its Start date is specified.  Based on the
    /// number of days specified for the listing, a projected end date is calculated.  Actual end 
    /// date defaults to DateTime.Min.  When a list ends, for whatever reason, its actualend date is set.
    /// A lists's actual end date may differ from its projected end date for various reasons.  The list
    /// status indicates the final fate of the list.
    /// When the list is initially created, its status indicates "None".  An "Expired" status indicates
    /// that the list ended without anyone winning it.  An "Ended" status indicates that the listing ended with
    /// a winner.  A status of "CSTerminated" indicates that the list was terminated by customer service
    /// before it finished.  Finally a status "EarlyTerminated" indicates that list was terminated premuturely
    /// because somebody bought it at buy-it-now proce.
	/// </summary>
	[Serializable]
	public  class AuctionListing
	{
		#region Fields
		
		private Int64 iD;
		private Int64 productId;        
		private String title;
		private String description;
		private Int64 duration = 7; // default is 7 days.
		private Int64 startingPrice;
		private Int64 reservePrice = 0;
		private Int64 bidIncrement = 1;
		private Int64 buyItNowPrice;
		private DateTime listingDate = DateTime.Now;
		private DateTime startDate = DateTime.Now;
        private DateTime projectedEndDate = DateTime.Now;
        private DateTime actualEndDate = DateTimeUtil.MinValue;
        private ListingStatus listingStatus = ListingStatus.None;

        // Transient fields
        private string item = string.Empty;
        private string categoryName = string.Empty;
        private string bids = "0";
        private string remainingTime = string.Empty;

		#endregion

		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the AuctionListing class
		/// </summary>
		public AuctionListing()
		{
		}
					
		#endregion
	
		#region Properties
		
		/// <summary>
		/// Gets or sets the ID for the current AuctionListing
		/// </summary>
		public virtual Int64 ID
		{
			get { return this.iD; }
			set { this.iD = value; }
		}
		
		/// <summary>
		/// Gets or sets the ProductId for the current AuctionListing
		/// </summary>
		public virtual Int64 ProductId
		{
			get { return this.productId; }
			set { this.productId = value; }
		}

        public virtual ListingStatus ListingStatus
        {
            get { return this.listingStatus; }
            set { this.listingStatus = value; }
        }

		/// <summary>
		/// Gets or sets the CategoryId for the current AuctionListing
		/// </summary>
        public virtual string ListingStatusString
        {
            get
            {
                if (listingStatus == ListingStatus.None && IsActive)
                {
                    return "Active";
                }
                else
                {
                    return Enum.GetName(typeof(ListingStatus), listingStatus);
                }
            }            
        }
		
		/// <summary>
		/// Gets or sets the Title for the current AuctionListing
		/// </summary>
		public virtual String Title
		{
			get { return this.title; }
			set { this.title = value; }
		}
		
		/// <summary>
		/// Gets or sets the Description for the current AuctionListing
		/// </summary>
		public virtual String Description
		{
			get { return this.description; }
			set { this.description = value; }
		}
		
		/// <summary>
		/// Gets or sets the Duration for the current AuctionListing
		/// </summary>
		public virtual Int64 Duration
		{
			get { return this.duration; }
			set { this.duration = value; }
		}
		
		/// <summary>
		/// Gets or sets the StartingPrice for the current AuctionListing
		/// </summary>
		public virtual Int64 StartingPrice
		{
			get { return this.startingPrice; }
			set { this.startingPrice = value; }
		}
		
		/// <summary>
		/// Gets or sets the ReservePrice for the current AuctionListing
		/// </summary>
		public virtual Int64 ReservePrice
		{
			get { return this.reservePrice; }
			set { this.reservePrice = value; }
		}
		
		/// <summary>
		/// Gets or sets the BidIncrement for the current AuctionListing
		/// </summary>
		public virtual Int64 BidIncrement
		{
			get { return this.bidIncrement; }
			set { this.bidIncrement = value; }
		}
		
		/// <summary>
		/// Gets or sets the BuyItNowPrice for the current AuctionListing
		/// </summary>
		public virtual Int64 BuyItNowPrice
		{
			get { return this.buyItNowPrice; }
			set { this.buyItNowPrice = value; }
		}
		
		/// <summary>
		/// Gets or sets the ListingDate for the current AuctionListing
		/// </summary>
		public virtual DateTime ListingDate
		{
			get { return this.listingDate; }
			set { this.listingDate = value; }
		}
		
		/// <summary>
        /// Gets or sets the StartDate for the current AuctionListing
		/// </summary>
        public virtual DateTime StartDate
		{
			get { return this.startDate; }
            set { this.startDate = value; }
		}

        /// <summary>
        /// Gets or sets the ProjectedEndDate for the current AuctionListing
        /// </summary>
        public virtual DateTime ProjectedEndDate
        {
            get { return this.projectedEndDate; }
            set { this.projectedEndDate = value; }
        }

        /// <summary>
        /// Gets or sets the EndDate for the current AuctionListing
        /// </summary>
        public virtual DateTime ActualEndDate
        {
            get { return this.actualEndDate; }
            set { this.actualEndDate = value; }
        }

        // Transient fields
        public virtual string Item
        {
            get { return item; }
            set { item = value; }
        }
        public virtual string Category
        {
            get { return categoryName; }
            set { categoryName = value; }
        }

        public virtual string Bids
        {
            get { return bids; }
            set { bids = value; }
        }
        
        public virtual string TimeRemaining
        {
            get
            {
                string remainingTime = "0";
                if (IsActive)
                {
                    DateTime now = DateTime.Now;
                    if (ProjectedEndDate > now)
                    {
                        // not over yet
                        TimeSpan diff = ProjectedEndDate.Subtract(now);
                        if (diff.TotalDays > 0)
                        {
                            remainingTime = string.Format("{0} days {1} hours {2} minutes",
                                diff.Days, diff.Hours, diff.Minutes);
                        }
                        else if (diff.TotalHours > 0)
                        {
                            remainingTime = string.Format("{0} hours {1} minutes",
                                diff.Hours, diff.Minutes);
                        }
                        else
                        {
                            remainingTime = diff.TotalMinutes.ToString() + " minutes";
                        }
                    }
                }                
                return remainingTime;
            }
        }

        public virtual bool IsActive
        {
            get
            {
                DateTime now = DateTime.Now;
                if (StartDate <= now && ProjectedEndDate > now && ActualEndDate == DateTimeUtil.MinValue)
                {
                    return true;
                }
                else
                    return false;
            }
        }
		#endregion        
	}
}