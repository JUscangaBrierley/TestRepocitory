<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FromMemberNoVirtualCards" xml:space="preserve">
    <value>統合元会員が会員カードを保有していません。</value>
  </data>
  <data name="lblAdditionalNotes.Text" xml:space="preserve">
    <value>追加メモ:</value>
  </data>
  <data name="lblFromAddressHeader.Text" xml:space="preserve">
    <value>住所</value>
  </data>
  <data name="lblFromEmailHeader.Text" xml:space="preserve">
    <value>Eメールアドレス</value>
  </data>
  <data name="lblFromLoyaltyIdHeader.Text" xml:space="preserve">
    <value>会員ID</value>
  </data>
  <data name="lblFromMember.Text" xml:space="preserve">
    <value>統合元会員:</value>
  </data>
  <data name="lblFromMemberConfirm.Text" xml:space="preserve">
    <value>統合元会員:</value>
  </data>
  <data name="lblFromMemberStatus.Text" xml:space="preserve">
    <value>会員ステータス</value>
  </data>
  <data name="lblFromNameHeader.Text" xml:space="preserve">
    <value>氏名</value>
  </data>
  <data name="lblInstructions.Text" xml:space="preserve">
    <value>以下に会員IDを入力後、確認ボタンを押下してください。確認のために、統合元・統合先の会員情報が表示されます。</value>
  </data>
  <data name="lblInstructions.Visible" xml:space="preserve">
    <value>FALSE</value>
  </data>
  <data name="lblSuccess.Text" xml:space="preserve">
    <value>会員統合が完了しました。</value>
  </data>
  <data name="lblToAddressHeader.Text" xml:space="preserve">
    <value>住所</value>
  </data>
  <data name="lblToEmailHeader.Text" xml:space="preserve">
    <value>Eメールアドレス</value>
  </data>
  <data name="lblToLoyaltyIdHeader.Text" xml:space="preserve">
    <value>会員ID</value>
  </data>
  <data name="lblToMember.Text" xml:space="preserve">
    <value>統合先会員:</value>
  </data>
  <data name="lblToMemberConfirm.Text" xml:space="preserve">
    <value>統合先会員:</value>
  </data>
  <data name="lblToMemberStatus.Text" xml:space="preserve">
    <value>会員ステータス</value>
  </data>
  <data name="lblToNameHeader.Text" xml:space="preserve">
    <value>氏名</value>
  </data>
  <data name="lnkMerge.Text" xml:space="preserve">
    <value>会員統合</value>
  </data>
  <data name="lnkValidate.Text" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="LoyaltyIdDoesNotExist" xml:space="preserve">
    <value>入力された会員IDは存在しません。</value>
  </data>
  <data name="LoyaltyIdIsCurrentMember" xml:space="preserve">
    <value>統合元と統合先が同一会員です。</value>
  </data>
  <data name="MergeConfirmation.Text" xml:space="preserve">
    <value>本当に会員統合を実行しますか？一度実行すると元には戻せません。</value>
  </data>
  <data name="reqLoyaltyId.ErrorMessage" xml:space="preserve">
    <value>統合元会員を入力してください。</value>
  </data>
  <data name="CreateInstanceBeforeFailed.Text" xml:space="preserve">
    <value>会員IDを{0}から{1}へ統合する前に、インスタンスの作成に失敗しました。,</value>
  </data>
  <data name="MergeFailedNoPrimaryVC.Text" xml:space="preserve">
    <value>この会員はvisual cardを保持していないため、アカウントの統合に失敗しました。</value>
  </data>
  <data name="MergeFromSuccess.Text" xml:space="preserve">
    <value>会員ID {0} は、既に{1}に統合されています。</value>
  </data>
  <data name="MergeToSuccess.Text" xml:space="preserve">
    <value>会員ID {0} は{1}に統合されました。</value>
  </data>
  <data name="ModuleTitle.Text" xml:space="preserve">
    <value>アカウントをマージ</value>
  </data>
</root>