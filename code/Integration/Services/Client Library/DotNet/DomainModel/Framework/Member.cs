//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by LoyaltyWare.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using System.ComponentModel;

using Brierley.LoyaltyWare.ClientLib.DomainModel;

namespace Brierley.LoyaltyWare.ClientLib.DomainModel.Framework
{
    public class Member : LWAttributeSetContainer
    {
        public enum MemberStatusEnum { Active = 1, Disabled = 2, Terminated = 3, Locked = 4, NonMember = 5, Merged = 6, PreEnrolled = 7 };
        public enum VirtualCardRetrieveType { FirstCard, PrimaryCard, MostRecentRegistered, MostRecentIssued, EarliestRegistered, EarliestIssued };        
        
        public virtual Int64 IpCode { get; set; }        
        public virtual DateTime MemberCreateDate { get; set; }
        public virtual DateTime? MemberCloseDate { get; set; }        
        public virtual MemberStatusEnum MemberStatus { get; set; }

        public virtual DateTime? BirthDate { get; set; }
        [LWMeta(false,50)]
        public virtual string FirstName { get; set; }
        [LWMeta(false, 50)]
        public virtual String LastName { get; set; }
        [LWMeta(false, 50)]
        public virtual String MiddleName { get; set; }
        [LWMeta(false, 10)]
        public virtual String NamePrefix { get; set; }
        [LWMeta(false, 10)]
        public virtual String NameSuffix { get; set; }
        [LWMeta(false, 255)]
        public virtual String AlternateId { get; set; }        
        [LWMeta(false, 254)]
        public virtual String Username { get; set; }
        [LWMeta(false, 50)]
        public virtual String Password { get; set; }
        [LWMeta(false, 254)]
        public virtual String PrimaryEmailAddress { get; set; }
        [LWMeta(false, 25)]
        public virtual String PrimaryPhoneNumber { get; set; }
        [LWMeta(false, 15)]
        public virtual String PrimaryPostalCode { get; set; }
        public virtual DateTime? LastActivityDate { get; set; }
        public virtual bool? IsEmployee { get; set; }
        [LWMeta(false, 25)]
        public virtual String ChangedBy { get; set; }

        public virtual IList<VirtualCard> GetLoyaltyCards()
        {
            IList<VirtualCard> loyaltyCards = new List<VirtualCard>();
            foreach (LWAttributeSetContainer a in Children)
            {
                if (a is VirtualCard)
                {
                    loyaltyCards.Add(a as VirtualCard);
                }
            }
            return loyaltyCards;
        }

        public virtual VirtualCard GetLoyaltyCard(string loyaltyId)
        {
            VirtualCard theCard = null;
            foreach (LWAttributeSetContainer a in Children)
            {
                if (a is VirtualCard)
                {
                    VirtualCard vc = a as VirtualCard;
                    if (vc.LoyaltyIdNumber == loyaltyId)
                    {
                        theCard = vc;
                        break;
                    }
                }
            }
            return theCard;
        }

	public virtual VirtualCard GetLoyaltyCardByType(VirtualCardRetrieveType type)
        {
            IList<VirtualCard> loyaltyCards = GetLoyaltyCards();            

            VirtualCard theCard = null;
            switch (type)
            {
                case VirtualCardRetrieveType.FirstCard:
                    theCard = loyaltyCards[0];
                    break;
                case VirtualCardRetrieveType.PrimaryCard:
                    foreach (VirtualCard vc in loyaltyCards)
                    {
                        if (vc.IsPrimary == true)
                        {
                            return vc;
                        }
                    }
                    break;
                case VirtualCardRetrieveType.EarliestIssued:
                    foreach (VirtualCard vc in loyaltyCards)
                    {
                        if (vc.DateIssued < theCard.DateIssued)
                        {
                            theCard = vc;
                        }
                    }
                    break;
                case VirtualCardRetrieveType.MostRecentIssued:
                    foreach (VirtualCard vc in loyaltyCards)
                    {
                        if (vc.DateIssued > theCard.DateIssued)
                        {
                            theCard = vc;
                        }
                    }
                    break;
                case VirtualCardRetrieveType.EarliestRegistered:
                    foreach (VirtualCard vc in loyaltyCards)
                    {
                        if (vc.DateRegistered < theCard.DateRegistered)
                        {
                            theCard = vc;
                        }
                    }
                    break;
                case VirtualCardRetrieveType.MostRecentRegistered:
                    foreach (VirtualCard vc in loyaltyCards)
                    {
                        if (vc.DateRegistered > theCard.DateRegistered)
                        {
                            theCard = vc;
                        }
                    }
                    break;
                default:
                    return null;
            }
            return theCard;
        }        

    }
}
